/**
 * Backbone.GoogleMaps
 * A Backbone JS layer for the GoogleMaps API
 * Copyright (c)2013 Edan Schwartz
 * Distributed under MIT license
 * https://github.com/eschwartz/backbone.googlemaps
*/
Backbone.GoogleMaps=function(e,t,n){var r={};r.Location=e.Model.extend({constructor:function(){t.bindAll(this,"select","deselect","toggleSelect","getLatlng");this.defaults=t.extend({},this.defaults,{lat:0,lng:0,selected:false,title:""});e.Model.prototype.constructor.apply(this,arguments)},select:function(){if(!this.get("selected")){this.set("selected",true);this.trigger("selected",this)}},deselect:function(){if(this.get("selected")){this.set("selected",false);this.trigger("deselected",this)}},toggleSelect:function(){if(this.get("selected")){this.deselect()}else{this.select()}},getLatlng:function(){return new google.maps.LatLng(this.get("lat"),this.get("lng"))}});r.LocationCollection=e.Collection.extend({model:r.Location,constructor:function(){e.Collection.prototype.constructor.apply(this,arguments);this.on("selected",function(e){this.each(function(t){if(e.cid!==t.cid){t.deselect()}})},this)}});r.MapView=e.View.extend({mapEvents:{},overlayOptions:{},constructor:function(){e.View.prototype.constructor.apply(this,arguments);if(!google||!google.maps)throw new Error("Google maps API is not loaded.");if(!this.options.map&&!this.map)throw new Error("A map must be specified.");this.gOverlay=this.map=this.options.map||this.map;this.overlayOptions||(this.overlayOptions=this.options.overlayOptions)},bindMapEvents:function(e){e||(e=this.mapEvents);for(event in this.mapEvents){var t=this.mapEvents[event];google.maps.event.addListener(this.gOverlay,event,this[t])}},render:function(){if(this.beforeRender){this.beforeRender()}this.bindMapEvents();if(this.onRender){this.onRender()}},close:function(){if(this.beforeClose){this.beforeClose()}google.maps.event.clearInstanceListeners(this.gOverlay);this.gOverlay.setMap(null);this.gOverlay=null}});r.InfoWindow=r.MapView.extend({constructor:function(){r.MapView.prototype.constructor.apply(this,arguments);t.bindAll(this,"render","close");if(!this.options.marker&&!this.marker)throw new Error("A marker must be specified for InfoWindow view.");this.marker=this.options.marker||this.marker;this.template=this.template||this.options.template},render:function(){if(this.beforeRender){this.beforeRender()}r.MapView.prototype.render.apply(this,arguments);var e=this.template?n(this.template).html():"<h2><%=title %></h2>";this.$el.html(t.template(e,this.model.toJSON()));this.gOverlay=new google.maps.InfoWindow(t.extend({content:this.$el[0]},this.overlayOptions));this.gOverlay.open(this.map,this.marker);if(this.onRender){this.onRender()}return this},close:function(){if(this.beforeClose){this.beforeClose()}r.MapView.prototype.close.apply(this,arguments);if(this.onClose){this.onClose()}return this}});r.MarkerView=r.MapView.extend({infoWindow:r.InfoWindow,constructor:function(){r.MapView.prototype.constructor.apply(this,arguments);t.bindAll(this,"render","close","openDetail","closeDetail","toggleSelect");if(!this.model)throw new Error("A model must be specified for a MarkerView");this.gOverlay=new google.maps.Marker(t.extend({position:this.model.getLatlng(),map:this.map,title:this.model.title,animation:google.maps.Animation.DROP,visible:false},this.overlayOptions));t.extend(this.mapEvents,{click:"toggleSelect"});this.model.on("selected",this.openDetail,this);this.model.on("deselected",this.closeDetail,this);this.model.on("change:lat change:lng",this.refreshOverlay,this)},refreshOverlay:function(){this.gOverlay.setOptions({position:this.model.getLatlng()})},toggleSelect:function(){this.model.toggleSelect()},render:function(){if(this.beforeRender){this.beforeRender()}r.MapView.prototype.render.apply(this,arguments);this.gOverlay.setVisible(true);if(this.onRender){this.onRender()}return this},close:function(){if(this.beforeClose){this.beforeClose()}this.closeDetail();r.MapView.prototype.close.apply(this,arguments);if(this.onClose){this.onClose()}return this},openDetail:function(){this.detailView=new this.infoWindow({model:this.model,map:this.options.map,marker:this.gOverlay});this.detailView.render()},closeDetail:function(){if(this.detailView){this.detailView.close();this.detailView=null}}});r.MarkerCollectionView=e.View.extend({markerView:r.MarkerView,markerViewChildren:{},constructor:function(){e.View.prototype.constructor.apply(this,arguments);t.bindAll(this,"render","closeChildren","closeChild","addChild","refresh","close");if(!this.options.map&&!this.map)throw new Error("A map must be specified on MarkerCollectionView instantiation");this.map||(this.map=this.options.map);this.collection.on("reset",this.refresh,this);this.collection.on("add",this.addChild,this);this.collection.on("remove",this.closeChild,this)},render:function(e){var e=e||this.collection;e.each(this.addChild)},closeChildren:function(){for(cid in this.markerViewChildren){this.closeChild(this.markerViewChildren[cid])}},closeChild:function(t){var n=t instanceof e.Model?this.markerViewChildren[t.cid]:t;n.close();delete this.markerViewChildren[n.model.cid]},addChild:function(e){var t=new this.markerView({model:e,map:this.map});this.markerViewChildren[e.cid]=t;t.render()},refresh:function(){this.closeChildren();this.render()},close:function(){this.closeChildren()}});return r}(Backbone,_,window.jQuery||window.Zepto||window.ender)

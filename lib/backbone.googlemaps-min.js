(function(root,factory){if(typeof define==="function"&&define.amd){define(["backbone","underscore","jquery"],factory)}else{factory(root.Backbone,root._,root.jQuery||root.Zepto||root.ender)}})(this,function(Backbone,_,$){"use strict";var GoogleMaps={};GoogleMaps.Location=Backbone.Model.extend({constructor:function(){_.bindAll(this,"select","deselect","toggleSelect","getLatLng","getLatlng");this.defaults=_.extend({},{lat:0,lng:0,selected:false,title:""},this.defaults);Backbone.Model.prototype.constructor.apply(this,arguments);this.on("change:selected",function(model,isSelected){var topic=isSelected?"selected":"deselected";this.trigger(topic,this)},this)},select:function(){this.set("selected",true)},deselect:function(){this.set("selected",false)},toggleSelect:function(){this.set("selected",!this.get("selected"))},getLatlng:function(){return this.getLatLng()},getLatLng:function(){return new google.maps.LatLng(this.get("lat"),this.get("lng"))},zoom:function(){this.trigger("location:zoom",this)}});GoogleMaps.LocationCollection=Backbone.Collection.extend({model:GoogleMaps.Location,constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments);this.on("change:selected",function(selectedModel,isSelected){if(isSelected){this.each(function(model){if(selectedModel.cid!==model.cid){model.deselect()}})}},this)}});GoogleMaps.MapView=Backbone.View.extend({mapEvents:{},overlayOptions:{},constructor:function(){_.bindAll(this,"render","close");Backbone.View.prototype.constructor.apply(this,arguments);if(!google||!google.maps)throw new Error("Google maps API is not loaded.");if(!this.options.map&&!this.map)throw new Error("A map must be specified.");this.gOverlay=this.map=this.options.map||this.map;this.overlayOptions||(this.overlayOptions=this.options.overlayOptions)},bindMapEvents:function(mapEvents){mapEvents||(mapEvents=this.mapEvents);for(var event in mapEvents){var handler=mapEvents[event];google.maps.event.addListener(this.gOverlay,event,this[handler])}},render:function(){this.trigger("before:render");if(this.beforeRender){this.beforeRender()}this.bindMapEvents();this.trigger("render");if(this.onRender){this.onRender()}return this},close:function(){this.trigger("before:close");if(this.beforeClose){this.beforeClose()}google.maps.event.clearInstanceListeners(this.gOverlay);if(this.gOverlay.setMap){this.gOverlay.setMap(null)}this.gOverlay=null;this.trigger("close");if(this.onClose){this.onClose()}}});GoogleMaps.InfoWindow=GoogleMaps.MapView.extend({constructor:function(){GoogleMaps.MapView.prototype.constructor.apply(this,arguments);_.bindAll(this,"render","close");if(!this.options.marker&&!this.marker)throw new Error("A marker must be specified for InfoWindow view.");this.marker=this.options.marker||this.marker;this.template=this.template||this.options.template},render:function(){this.trigger("before:render");if(this.beforeRender){this.beforeRender()}GoogleMaps.MapView.prototype.render.apply(this,arguments);var tmpl=this.template?$(this.template).html():"<h2><%=title %></h2>";this.$el.html(_.template(tmpl,this.model.toJSON()));this.gOverlay=new google.maps.InfoWindow(_.extend({content:this.$el[0]},this.overlayOptions));this.gOverlay.open(this.map,this.marker);this.trigger("render");if(this.onRender){this.onRender()}return this},close:function(){this.trigger("before:close");if(this.beforeClose){this.beforeClose()}GoogleMaps.MapView.prototype.close.apply(this,arguments);this.trigger("close");if(this.onClose){this.onClose()}return this}});GoogleMaps.MarkerView=GoogleMaps.MapView.extend({infoWindow:GoogleMaps.InfoWindow,constructor:function(){GoogleMaps.MapView.prototype.constructor.apply(this,arguments);_.bindAll(this,"render","close","openDetail","closeDetail","toggleSelect");if(!this.model)throw new Error("A model must be specified for a MarkerView");this.gOverlay=new google.maps.Marker(_.extend({position:this.model.getLatLng(),map:this.map,title:this.model.title,animation:google.maps.Animation.DROP,visible:false},this.overlayOptions));_.extend(this.mapEvents,{click:"toggleSelect"});this.model.on("change:selected",function(model,isSelected){if(isSelected){this.openDetail()}else{this.closeDetail()}},this);this.model.on("change:lat change:lng",this.refreshOverlay,this);this.bindMapEvents({position_changed:"updateModelPosition"})},refreshOverlay:function(){if(!this.model.getLatLng().equals(this.gOverlay.getPosition())){this.gOverlay.setOptions({position:this.model.getLatLng()})}},updateModelPosition:function(){var newPosition=this.gOverlay.getPosition();if(!this.model.getLatLng().equals(newPosition)){this.model.set({lat:newPosition.lat(),lng:newPosition.lng()})}},toggleSelect:function(){this.model.toggleSelect()},render:function(){this.trigger("before:render");if(this.beforeRender){this.beforeRender()}GoogleMaps.MapView.prototype.render.apply(this,arguments);this.gOverlay.setVisible(true);this.trigger("render");if(this.onRender){this.onRender()}return this},close:function(){this.trigger("before:close");if(this.beforeClose){this.beforeClose()}this.closeDetail();GoogleMaps.MapView.prototype.close.apply(this,arguments);this.model.off();this.trigger("close");if(this.onClose){this.onClose()}return this},openDetail:function(){this.detailView=new this.infoWindow({model:this.model,map:this.map,marker:this.gOverlay});this.detailView.render()},closeDetail:function(){if(this.detailView){this.detailView.close();this.detailView=null}}});GoogleMaps.MarkerCollectionView=Backbone.View.extend({markerView:GoogleMaps.MarkerView,constructor:function(){this.markerViewChildren={};Backbone.View.prototype.constructor.apply(this,arguments);_.bindAll(this,"render","closeChildren","closeChild","addChild","refresh","close");if(!this.options.map&&!this.map)throw new Error("A map must be specified on MarkerCollectionView instantiation");this.map||(this.map=this.options.map);this.collection.on("reset",this.refresh,this);this.collection.on("add",this.addChild,this);this.collection.on("remove",this.closeChild,this);this.collection.on("location:zoom","location:zoom",this)},render:function(collection){var collection=collection||this.collection;this.trigger("before:render");if(this.beforeRender){this.beforeRender()}collection.each(this.addChild);this.trigger("render");if(this.onRender){this.onRender()}this.fitCollection();return this},closeChildren:function(){for(var cid in this.markerViewChildren){this.closeChild(this.markerViewChildren[cid])}},closeChild:function(child){var childView=child instanceof Backbone.Model?this.markerViewChildren[child.cid]:child;childView.close();delete this.markerViewChildren[childView.model.cid]},addChild:function(childModel){var markerView=new this.markerView({model:childModel,map:this.map});this.markerViewChildren[childModel.cid]=markerView;markerView.render()},refresh:function(){this.closeChildren();this.render()},close:function(){this.closeChildren();this.collection.off()},fitCollection:function(){var bounds=new google.maps.LatLngBounds;for(var el in this.collection.models){bounds.extend(this.collection.models[el].getLatLng())}this.map.fitBounds(bounds)},markerZoom:function(location){var bounds=new google.maps.LatLngBounds;bounds.extend(location.getLatLng());this.map.fitBounds(bounds)}});GoogleMaps.MarkerRouteCollectionView=GoogleMaps.MarkerCollectionView.extend({lines:[],directionsDisplay:{markerOptions:{}},travelMode:google.maps.TravelMode.DRIVING,onRender:function(){this.drawRoute()},drawRoute:function(){for(var i=0,l=this.collection.length;i<l;i++){var start=this.collection.models[i].getLatLng();if(this.collection.models[i+1]!==undefined){var end=this.collection.models[i+1].getLatLng();var line=new google.maps.Polyline({path:[start,end],strokeColor:"#144C66",strokeOpacity:.7,strokeWeight:5,geodesic:true});line.setMap(this.map);this.lines.push(line)}}},closeChildren:function(){for(var l in this.lines){this.lines[l].setMap(null)}this.lines=[];GoogleMaps.MarkerCollectionView.prototype.closeChildren.apply(this,arguments)}});GoogleMaps.MapControllerView=Backbone.View.extend({el:"#map_canvas",MarkerCollectionView:GoogleMaps.MarkerCollectionView,MarkerRouteCollectionView:GoogleMaps.MarkerRouteCollectionView,mapOptions:{zoom:12,mapTypeId:google.maps.MapTypeId.ROADMAP},initialize:function(attrs){this.listViews={};this.map=new google.maps.Map($(this.el)[0],this.mapOptions)},hideView:function(name){this.trigger("before:hide:view");if(!this.listViews[name]){throw new Error({msg:"No View Named that way"})}this.listViews[name].hideCollection();this.trigger("after:hide:view")},showView:function(name){this.trigger("before:show:view");if(!this.listViews[name]){throw new Error({msg:"No View Named that way"})}this.listViews[name].showCollection();this.trigger("after:show:view")},addView:function(places,name,options){this.trigger("before:add:view");if(this.listViews[name]){this.listViews[name].collection.add(places)}else if(options&&options.route){this.listViews[name]=new this.MarkerRouteCollectionView({collection:places,map:this.map})}else{this.listViews[name]=new this.MarkerCollectionView({collection:places,map:this.map})}if(options&&options.fit){this.listViews[name].fitCollection()}this.listViews[name].render();this.trigger("after:add:view")},closeView:function(name){this.trigger("before:close:view");if(this.listViews[name]){this.listViews[name].close();delete this.listViews[name]}this.trigger("after:close:view")},closeAllViews:function(){this.trigger("before:close:all");for(var v in this.listViews){this.listViews[v].close();delete this.listViews[v]}this.trigger("after:close:all")},fitAllViews:function(){var bounds=new google.maps.LatLngBounds;for(var v in this.listViews){var view=this.listViews[v];for(var p in view.collection.models){var place=view.collection.models[p];bounds.extend(place.getLatLng())}}this.map.fitBounds(bounds)},tilesLoaded:function(){this.trigger("tiles:loaded")}});Backbone.GoogleMaps=GoogleMaps;return GoogleMaps});
/*!
 * Backbone.GoogleMaps
 * A Backbone JS layer for the GoogleMaps API
 * Copyright (c)2012 Edan Schwartz
 * Distributed under MIT license
 * https://github.com/eschwartz/backbone.googlemaps
 *
 * Forked by Andy dePasquale
 * https://github.com/webakimbo/backbone.googlemaps
 */
 (function(e,t){if(typeof define==="function"&&define.amd){define(["backbone","underscore","markerclusterer","jquery"],t)}else{t(e.Backbone,e._,e.MarkerClusterer,e.jQuery||e.Zepto||e.ender)}})(this,function(e,t,n,r){"use strict";var i={},s;i.Location=e.Model.extend({constructor:function(){t.bindAll(this,"select","deselect","toggleSelect","getLatLng","getLatlng");this.defaults=t.extend({},{lat:0,lng:0,selected:false,title:""},this.defaults);e.Model.prototype.constructor.apply(this,arguments);this.on("change:selected",function(e,t){var n=t?"selected":"deselected";this.trigger(n,this)},this)},select:function(){this.set("selected",true)},deselect:function(){this.set("selected",false)},toggleSelect:function(){this.set("selected",!this.get("selected"))},getLatlng:function(){return this.getLatLng()},getLatLng:function(){return new google.maps.LatLng(this.get("lat"),this.get("lng"))}});i.LocationCollection=e.Collection.extend({constructor:function(){this.model=this.model||i.Location;e.Collection.prototype.constructor.apply(this,arguments);this.on("change:selected",function(e,t){if(t){this.each(function(t){if(e.cid!==t.cid){t.deselect()}})}},this)}});i.MapView=e.View.extend({constructor:function(n){t.bindAll(this,"render","close");this.mapEvents=this.mapEvents||{};this.overlayOptions=this.overlayOptions||{};e.View.prototype.constructor.apply(this,arguments);this.options=n;if(!google||!google.maps)throw new Error("Google maps API is not loaded.");if(!this.options.map&&!this.map)throw new Error("A map must be specified.");this.gOverlay=this.map=this.options.map||this.map;t.extend(this.overlayOptions,this.options.overlayOptions)},bindMapEvents:function(e,n){var r=n||this;e||(e=this.mapEvents);t.each(e,function(e,t){var n=this._getHandlerFromReference(e);this._addGoogleMapsListener(t,n,r)},this)},_getHandlerFromReference:function(e){var n=t.isString(e)?this[e]:e;if(!t.isFunction(n)){throw new Error("Unable to bind map event. "+e+" is not a valid event handler method")}return n},_addGoogleMapsListener:function(e,n,r){if(r){n=t.bind(n,r)}google.maps.event.addListener(this.gOverlay,e,n)},render:function(){this.trigger("before:render");if(this.beforeRender){this.beforeRender()}this.bindMapEvents();this.trigger("render");if(this.onRender){this.onRender()}return this},close:function(){this.trigger("before:close");if(this.beforeClose){this.beforeClose()}google.maps.event.clearInstanceListeners(this.gOverlay);if(this.gOverlay.setMap){this.gOverlay.setMap(null)}this.gOverlay=null;this.trigger("close");if(this.onClose){this.onClose()}}});i.InfoWindow=i.MapView.extend({constructor:function(){i.MapView.prototype.constructor.apply(this,arguments);t.bindAll(this,"render","close");if(!this.options.marker&&!this.marker)throw new Error("A marker must be specified for InfoWindow view.");this.marker=this.options.marker||this.marker;this.template=this.template||this.options.template},render:function(){this.trigger("before:render");if(this.beforeRender){this.beforeRender()}i.MapView.prototype.render.apply(this,arguments);var e=this.template?r(this.template).html():"<h2><%=title %></h2>";this.$el.html(t.template(e,this.model.toJSON()));this.gOverlay=new google.maps.InfoWindow(t.extend({content:this.$el[0]},this.overlayOptions));this.gOverlay.open(this.map,this.marker);this.trigger("render");if(this.onRender){this.onRender()}return this},close:function(){this.trigger("before:close");if(this.beforeClose){this.beforeClose()}i.MapView.prototype.close.apply(this,arguments);this.trigger("close");if(this.onClose){this.onClose()}return this}});i.MarkerView=i.MapView.extend({constructor:function(){this.infoWindow=this.infoWindow||i.InfoWindow;i.MapView.prototype.constructor.apply(this,arguments);t.bindAll(this,"render","close","openDetail","closeDetail","toggleSelect");if(!this.model)throw new Error("A model must be specified for a MarkerView");this.gOverlay=new google.maps.Marker(t.extend({position:this.model.getLatLng(),map:this.map,title:this.model.title,animation:google.maps.Animation.DROP,visible:false},this.overlayOptions));t.extend(this.mapEvents,{click:"toggleSelect"});this.model.on("change:selected",function(e,t){if(t){this.openDetail()}else{this.closeDetail()}},this);this.model.on("change:lat change:lng",this.refreshOverlay,this);this.bindMapEvents({position_changed:"updateModelPosition"})},refreshOverlay:function(){if(!this.model.getLatLng().equals(this.gOverlay.getPosition())){this.gOverlay.setOptions({position:this.model.getLatLng()})}},updateModelPosition:function(){var e=this.gOverlay.getPosition();if(!this.model.getLatLng().equals(e)){this.model.set({lat:e.lat(),lng:e.lng()})}},toggleSelect:function(){this.model.toggleSelect()},render:function(){this.trigger("before:render");if(this.beforeRender){this.beforeRender()}i.MapView.prototype.render.apply(this,arguments);this.gOverlay.setVisible(true);s.addMarker(this.gOverlay);this.trigger("render");if(this.onRender){this.onRender()}return this},close:function(){this.trigger("before:close");if(this.beforeClose){this.beforeClose()}s.removeMarker(this.gOverlay);this.closeDetail();i.MapView.prototype.close.apply(this,arguments);this.model.off();this.trigger("close");if(this.onClose){this.onClose()}return this},openDetail:function(){this.detailView=new this.infoWindow({model:this.model,map:this.map,marker:this.gOverlay});this.detailView.render()},closeDetail:function(){if(this.detailView){this.detailView.close();this.detailView=null}}});i.MarkerCollectionView=e.View.extend({constructor:function(r){this.markerView=this.markerView||i.MarkerView;this.markerViewChildren=this.markerViewChildren||{};e.View.prototype.constructor.apply(this,arguments);this.options=r;t.bindAll(this,"render","closeChildren","closeChild","addChild","refresh","close");if(!this.options.map&&!this.map)throw new Error("A map must be specified on MarkerCollectionView instantiation");this.map||(this.map=this.options.map);var o=t.extend({},{active:true,opts:{averageCenter:true}},this.options.markerclusterer);if(o.active){s=new n(this.map,[],o.opts)}else{var u=t.extend({},n.prototype),a=t.functions(u),f=[];t(a.length).times(function(e){f.push(function(){return true})});s=t.object(a,f)}this.collection.on("reset",this.refresh,this);this.collection.on("add",this.addChild,this);this.collection.on("remove",this.closeChild,this)},render:function(e){var e=e||this.collection;this.trigger("before:render");if(this.beforeRender){this.beforeRender()}e.each(this.addChild);this.trigger("render");if(this.onRender){this.onRender()}return this},closeChildren:function(){for(var e in this.markerViewChildren){this.closeChild(this.markerViewChildren[e])}s.clearMarkers()},closeChild:function(t){var n=t instanceof e.Model?this.markerViewChildren[t.cid]:t;n.close();delete this.markerViewChildren[n.model.cid]},addChild:function(e){var t=new this.markerView({model:e,map:this.map});this.markerViewChildren[e.cid]=t;t.render()},refresh:function(){this.closeChildren();this.render()},close:function(){this.closeChildren();this.collection.off()}});e.GoogleMaps=i;return i})